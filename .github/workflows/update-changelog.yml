name: Update Changelog

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'CHANGELOG.md'

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Git user
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Get latest version
        id: get_version
        run: |
          VERSION=$(grep -m 1 "version" package.json | sed 's/[^0-9.]//g')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Get commit messages since last tag
        id: get_commits
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s" --no-merges)
          else
            COMMITS=$(git log $LAST_TAG..HEAD --pretty=format:"- %s" --no-merges)
          fi
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Update CHANGELOG.md
        run: |
          DATE=$(date +%Y-%m-%d)
          VERSION="${{ steps.get_version.outputs.version }}"
          
          if [ -f CHANGELOG.md ]; then
            # Check if this version is already in the changelog
            if ! grep -q "## \[$VERSION\]" CHANGELOG.md; then
              # Create temporary file with new content
              echo "# Changelog" > temp_changelog.md
              echo "" >> temp_changelog.md
              echo "All notable changes to this project will be documented in this file." >> temp_changelog.md
              echo "" >> temp_changelog.md
              echo "## [$VERSION] - $DATE" >> temp_changelog.md
              echo "" >> temp_changelog.md
              echo "${{ steps.get_commits.outputs.commits }}" >> temp_changelog.md
              echo "" >> temp_changelog.md
              
              # Append existing changelog content (skipping header)
              tail -n +4 CHANGELOG.md >> temp_changelog.md
              
              # Replace original file
              mv temp_changelog.md CHANGELOG.md
            fi
          else
            # Create new changelog file
            echo "# Changelog" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "All notable changes to this project will be documented in this file." >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "## [$VERSION] - $DATE" >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "${{ steps.get_commits.outputs.commits }}" >> CHANGELOG.md
            echo "" >> CHANGELOG.md
          fi
      
      - name: Commit and push changes
        run: |
          git add CHANGELOG.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update CHANGELOG.md [skip ci]"
            git push
          fi 